// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartLogis.API.Data;

#nullable disable

namespace SmartLogis.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartLogis.API.Models.Bitacora", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idBitacora");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBitacora"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("accion");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaHora");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modulo");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Bitacora");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ciudad");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("creationDate");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("email");

                    b.Property<int>("IdCreationUser")
                        .HasColumnType("int")
                        .HasColumnName("idCreationUser");

                    b.Property<int>("IdEstatus")
                        .HasColumnType("int")
                        .HasColumnName("idEstatus");

                    b.Property<int?>("IdModificationUser")
                        .HasColumnType("int")
                        .HasColumnName("idModificationUser");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modificationDate");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("pais");

                    b.Property<string>("RFC")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("rfc");

                    b.Property<string>("Telefono")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("telefono");

                    b.HasKey("IdCliente");

                    b.HasIndex("IdEstatus");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("SmartLogis.API.Models.DetallesEnvio", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalle");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalle"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("DescripcionCarga")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("decripcionCarga");

                    b.Property<int?>("EnvioIdEnvio")
                        .HasColumnType("int");

                    b.Property<int>("IdEnvio")
                        .HasColumnType("int")
                        .HasColumnName("idEnvio");

                    b.Property<int>("IdEstatus")
                        .HasColumnType("int")
                        .HasColumnName("idEstatus");

                    b.Property<int>("IdRuta")
                        .HasColumnType("int")
                        .HasColumnName("idRuta");

                    b.Property<int>("IdTransportista")
                        .HasColumnType("int")
                        .HasColumnName("idTransportista");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("peso");

                    b.Property<int?>("RutasIdRuta")
                        .HasColumnType("int");

                    b.Property<int?>("TransportistaIdTransportista")
                        .HasColumnType("int");

                    b.HasKey("IdDetalle");

                    b.HasIndex("EnvioIdEnvio");

                    b.HasIndex("IdEnvio");

                    b.HasIndex("IdEstatus");

                    b.HasIndex("IdRuta");

                    b.HasIndex("IdTransportista");

                    b.HasIndex("RutasIdRuta");

                    b.HasIndex("TransportistaIdTransportista");

                    b.ToTable("DetallesEnvio");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Envio", b =>
                {
                    b.Property<int>("IdEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEnvio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnvio"));

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("destino");

                    b.Property<DateTime?>("FechaEntregaEstimada")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaEntregaEstimada");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaSalida");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<int>("IdEstatusEnvio")
                        .HasColumnType("int")
                        .HasColumnName("idEstatusEnvio");

                    b.Property<string>("NumeroGuia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numeroGuia");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)")
                        .HasColumnName("observaciones");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("origen");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("peso");

                    b.Property<string>("TipoEnvio")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("tipoEnvio");

                    b.Property<decimal>("Volumen")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("volumen");

                    b.HasKey("IdEnvio");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("IdCliente");

                    b.ToTable("Envio");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Estatus", b =>
                {
                    b.Property<int>("IdEstatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstatus");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstatus"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)")
                        .HasColumnName("nombre");

                    b.HasKey("IdEstatus");

                    b.ToTable("Estatus");
                });

            modelBuilder.Entity("SmartLogis.API.Models.EstatusEnvio", b =>
                {
                    b.Property<int>("IdEstatusEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstatusEnvio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstatusEnvio"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("comentario");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaHora");

                    b.Property<int>("IdEnvio")
                        .HasColumnType("int")
                        .HasColumnName("idEnvio");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ubicacion");

                    b.Property<int>("idEnvio")
                        .HasColumnType("int");

                    b.HasKey("IdEstatusEnvio");

                    b.HasIndex("idEnvio");

                    b.ToTable("EstatusEnvio", t =>
                        {
                            t.Property("idEnvio")
                                .HasColumnName("idEnvio1");
                        });
                });

            modelBuilder.Entity("SmartLogis.API.Models.Rutas", b =>
                {
                    b.Property<int>("IdRuta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRuta"));

                    b.Property<string>("CodigoRuta")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DistanciaKm")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<int>("IdEstatus")
                        .HasColumnType("int");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("TiempoEstimadoHoras")
                        .HasColumnType("time");

                    b.HasKey("IdRuta");

                    b.HasIndex("IdEstatus");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Transportista", b =>
                {
                    b.Property<int>("IdTransportista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTransportista");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransportista"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("email");

                    b.Property<int>("IdEstatus")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nombre");

                    b.Property<string>("Placas")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("placas");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono");

                    b.Property<string>("TipoUnidad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("tipoUnidad");

                    b.HasKey("IdTransportista");

                    b.HasIndex("IdEstatus");

                    b.ToTable("Transportista");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("creationDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("password");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("rol");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Bitacora", b =>
                {
                    b.HasOne("SmartLogis.API.Models.Usuario", "Usuario")
                        .WithMany("Bitacora")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Cliente", b =>
                {
                    b.HasOne("SmartLogis.API.Models.Estatus", "Estatus")
                        .WithMany()
                        .HasForeignKey("IdEstatus")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Estatus");
                });

            modelBuilder.Entity("SmartLogis.API.Models.DetallesEnvio", b =>
                {
                    b.HasOne("SmartLogis.API.Models.Envio", null)
                        .WithMany("DetallesEnvio")
                        .HasForeignKey("EnvioIdEnvio");

                    b.HasOne("SmartLogis.API.Models.Envio", "Envio")
                        .WithMany()
                        .HasForeignKey("IdEnvio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SmartLogis.API.Models.Estatus", "Estatus")
                        .WithMany()
                        .HasForeignKey("IdEstatus")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SmartLogis.API.Models.Rutas", "Rutas")
                        .WithMany()
                        .HasForeignKey("IdRuta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SmartLogis.API.Models.Transportista", "Transportista")
                        .WithMany()
                        .HasForeignKey("IdTransportista")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SmartLogis.API.Models.Rutas", null)
                        .WithMany("DetallesEnvio")
                        .HasForeignKey("RutasIdRuta");

                    b.HasOne("SmartLogis.API.Models.Transportista", null)
                        .WithMany("DetallesEnvio")
                        .HasForeignKey("TransportistaIdTransportista");

                    b.Navigation("Envio");

                    b.Navigation("Estatus");

                    b.Navigation("Rutas");

                    b.Navigation("Transportista");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Envio", b =>
                {
                    b.HasOne("SmartLogis.API.Models.Cliente", null)
                        .WithMany("Envios")
                        .HasForeignKey("ClienteIdCliente");

                    b.HasOne("SmartLogis.API.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SmartLogis.API.Models.EstatusEnvio", b =>
                {
                    b.HasOne("SmartLogis.API.Models.Envio", "Envio")
                        .WithMany("EstatusEnvios")
                        .HasForeignKey("idEnvio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Envio");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Rutas", b =>
                {
                    b.HasOne("SmartLogis.API.Models.Estatus", "Estatus")
                        .WithMany()
                        .HasForeignKey("IdEstatus")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Estatus");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Transportista", b =>
                {
                    b.HasOne("SmartLogis.API.Models.Estatus", "Estatus")
                        .WithMany()
                        .HasForeignKey("IdEstatus")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Estatus");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Cliente", b =>
                {
                    b.Navigation("Envios");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Envio", b =>
                {
                    b.Navigation("DetallesEnvio");

                    b.Navigation("EstatusEnvios");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Rutas", b =>
                {
                    b.Navigation("DetallesEnvio");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Transportista", b =>
                {
                    b.Navigation("DetallesEnvio");
                });

            modelBuilder.Entity("SmartLogis.API.Models.Usuario", b =>
                {
                    b.Navigation("Bitacora");
                });
#pragma warning restore 612, 618
        }
    }
}
